SELECT
 * 
FROM
  `my-project-dann-397622.sales.sales_info`
LIMIT
 50


--Use MIN and MAX SQL functions to get the oldest and most recent dates
SELECT
 MIN(Date) AS min_date,
 MAX(Date) AS max_date
FROM
  `my-project-dann-397622.sales.sales_info`


--How many of each product is sold at each store at a given time?
SELECT
  EXTRACT(YEAR FROM Date) AS YEAR --time grouping
, EXTRACT(MONTH FROM Date) AS MONTH --time grouping
, ProductId --need to know which products are sold
, StoreID --need to know which stores are selling
, SUM(quantity) AS UnitsSold --how many (impacts inventory)
, AVG(UnitPrice) AS UnitPriceProxy --can be interesting
, COUNT(DISTINCT salesID) AS NumTransactions --unique transactions can be interesting
FROM 
  sales.sales_info
GROUP BY   YEAR,   MONTH,   ProductId, StoreID
ORDER BY   YEAR,   MONTH,   ProductId, StoreID




--The current inventory of every product for each store

--The average monthly quantity of a given product that was sold at that store

with sales_history as (
  SELECT
    EXTRACT(YEAR FROM Date) AS YEAR --time grouping
  , EXTRACT(MONTH FROM Date) AS MONTH --time grouping
  , ProductId --need to know which products are sold
  , StoreID --need to know which stores are selling
  , SUM(quantity) AS UnitsSold --how many (impacts inventory)
  , AVG(UnitPrice) AS UnitPriceProxy --can be interesting
  , COUNT(DISTINCT salesID) AS NumTransactions --unique transactions can be interesting
  FROM sales.sales_info
  GROUP BY   YEAR,   MONTH, ProductId, StoreID
)
SELECT
 inventory.*
 , (SELECT AVG(UnitsSold) FROM sales_history
      WHERE inventory.ProductID=sales_history.ProductID
      AND inventory.StoreID=sales_history.StoreID) AS avg_quantity_sold_in_a_month
FROM sales.inventory